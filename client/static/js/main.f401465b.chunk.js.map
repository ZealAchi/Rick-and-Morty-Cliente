{"version":3,"sources":["styles/Utils.jsx","pages/home/components/card.jsx","graphql/querys.js","pages/home/components/index.jsx","components/helpers/index.jsx","pages/home/index.js","pages/episodes/modal.jsx","pages/episodes/index.jsx","layouts/Body.jsx","components/Navbar/HeaderPresenter.js","components/Navbar/index.js","components/Navbar/HeaderContainer.js","layouts/Header.jsx","layouts/index.jsx","pages/home/components/cardepisodes.jsx","pages/home/components/perfil.jsx","routes/index.jsx","Util/apolloClient.jsx","serviceWorker.js","index.js","App.js"],"names":["styled","div","_templateObject","_templateObject2","_templateObject3","a","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","keyframes","_templateObject10","props","console","log","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","Meta","Card","memo","react_default","createElement","className","style","box-sizing","card","hoverable","cover","alt","src","image","description","Fragment","fontSize","color","name","status","id","GET_EPISODES","gql","querys_templateObject","GET_PROFILE","querys_templateObject2","HOME_PAGE","querys_templateObject3","withRouter","_ref","character","match","history","_useState","useState","_useState2","Object","slicedToArray","page","setPage","react_apollo_esm","variables","query","url","_ref2","loading","error","_ref2$data","data","_ref2$data$characters","characters","_ref2$data$characters2","info","next","prev","pages","count","results","justify-content","map","_ref3","react_router_dom","assign","padding","key","to","concat","components_card","type","onClick","pageCount","currentPage","pageButtons","_loop","i","push","paginationButton","Home","components","SetCharacter","visible","setVisible","Button","variant","modal","title","width","top","onCancel","onOk","air_date","episode","background","d","index","Episodes","SetEpisode","_ref2$data$episodes","episodes","_ref2$data$episodes$i","Table","dato","episodes_modal","Contenido","Body_templateObject","children","inputRef","useRef","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","ref","current","value","HeaderContainer","Navbar_HeaderPresenter","this","state","Component","Navbar","layouts_Header","layouts_Body","ruta","path","cardepisodes_Meta","params","RedirectHome","gender","species","origin","cardepisodes","react_router","NoMatch","location","pathname","_useState3","_useState4","exact","render","layouts","perfil","component","client","ApolloClient","uri","cache","InMemoryCache","onError","networkError","Boolean","window","hostname","ReactDOM","ApolloContext","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f401465b.chunk.js","sourcesContent":["import styled, { keyframes }  from 'styled-components'\r\nexport  const Container=styled.div`\r\n//padding-top:15px;\r\n\r\n`\r\nexport const NbBase=styled.div`\r\n border-bottom: 2px solid #29894e;\r\n      background: #2f9e59;\r\n      position: relative;\r\n      color: #FFF;\r\n      z-index: 1;\r\n`\r\nexport const NbWrapper=styled.div`\r\n  align-items: center;\r\n      max-width: 1040px;\r\n      padding: 0 20px;\r\n      margin: 0 auto;\r\n      display: flex;\r\n      height: 50px;\r\n`\r\n\r\n\r\nexport const NbBrand=styled.a` \r\n  \r\n      font-family: Josefin Sans;\r\n      text-decoration: none;\r\n      align-items: center;\r\n      font-weight: 400;\r\n      font-size: 20px;\r\n      display: flex;\r\n      color: #FFF;\r\n      & > div {\r\n        margin-left: 5px;\r\n        height: 15px;\r\n      }\r\n    \r\n      `\r\n\r\nexport const NbSpacer=styled.div` \r\n      flex: 1;\r\n\r\n    `\r\nexport const NbDesktop=styled.div` \r\n align-items: center;\r\n      display: none;\r\n  \r\n      @media (min-width: 600px) {\r\n        display: flex;\r\n      }\r\n  `\r\n\r\nexport const Link=styled.a` \r\n   text-transform: uppercase;\r\n      font-family: Josefin Sans;\r\n      text-decoration: none;\r\n      font-weight: 400;\r\n      font-size: 14px;\r\n      color: inherit;\r\n      height: 10px;\r\n \r\n  `\r\n  export const Separator=styled.div` \r\n  border-left: 1px solid rgba(255, 255, 255, 0.2);\r\n margin: 0 15px;\r\n height: 30px;\r\n`\r\nexport const NbMobilMenu=styled.div` \r\n box-shadow: 0 0 30px rgba(0,0,0,0.5);\r\n      border-bottom: 2px solid #29894e;\r\n      background: #2f9e59;\r\n  \r\n      transform: {transform};\r\n      position: absolute;\r\n      transition: 320ms;\r\n      padding: 0 20px;\r\n      top: 52px;\r\n      right: 0;\r\n      left: 0;\r\n`\r\nconst transform = keyframes`\r\n/*  if (menu) {\r\n        \"translateY(0)\"\r\n      } else {\r\n        \"translateY(-120%)\"\r\n      }*/\r\n      ${props => console.log(props)\r\n      }\r\n`;\r\n\r\nexport const NbMobileLink=styled.div` \r\n  text-decoration: none;\r\n      font-size: 18px;\r\n      padding: 15px 0;\r\n      display: block;\r\n      color: white;\r\n  \r\n      & + * {\r\n        border-top: 1px solid rgba(255, 255, 255, 0.2);\r\n      }\r\n`\r\nexport const NbMobilDiv=styled.div` \r\n display: none;\r\n      height: 24px;\r\n  \r\n      @media (max-width: 599px) {\r\n        display: block;\r\n      }\r\n  \r\n      & svg {\r\n        fill: currentColor;\r\n      }\r\n    `\r\nexport const Limiter=styled.div` \r\n  width: 100%;\r\n  margin: 0 auto;\r\n`\r\nexport const ContainerLogin=styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: #2f9e59;\r\n    background: -webkit-linear-gradient(-135deg, #2f9e59, #4158d0);\r\n    background: -o-linear-gradient(-135deg, #2f9e59, #4158d0);\r\n    background: -moz-linear-gradient(-135deg, #c850c0, #4158d0);\r\n    background: linear-gradient(-135deg, #2f9e59, #4158d0);\r\n    `\r\n    export const WrapLogin=styled.div`\r\n      @media (max-width: 700px) {\r\n    padding: 100px 15px 33px 15px;\r\n      }\r\n      @media (max-width: 768px) {\r\n    padding:100px 80px 33px 80px;\r\n      }\r\n            @media (max-width: 992px) {\r\n    padding:100px 80px 33px 80px;\r\n      }\r\n  \r\n\r\n    padding: 100px 15px 33px 15px;\r\n    width: 960px;\r\n    background: #fff;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    padding: 177px 130px 33px 95px;`\r\n\r\n\r\n\r\nexport const LoginImage=styled.div`\r\n    will-change: transform;\r\n    transform: perspective(300px) rotateX(0deg) rotateY(0deg);\r\n    @media (max-width: 768px) {\r\n\r\n\r\n    display: none;\r\n}\r\n\r\n@media (max-width: 992px) {\r\n\r\n    width: 35%;\r\n}\r\n`\r\nexport const From=styled.div`\r\n`\r\n\r\n","import React, { memo } from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default memo(function Card1(props) {\r\n  return (\r\n    <div className=\"\" style={{'box-sizing':' border-box'}}>\r\n    <Card\r\n      className=\"\"\r\n      hoverable\r\n      cover={<img  className=\"img-thumbnail\" alt=\"example\" src={props.image} />}\r\n    >\r\n      <Meta\r\n      \r\n        description={\r\n          <>\r\n           <p style={{fontSize:20, color:\"black\"}}> <strong> {props.name}</strong></p>\r\n            {props.status}\r\n            {props.id}\r\n          </>\r\n        }\r\n      />\r\n    </Card>\r\n    </div>\r\n  );\r\n});\r\n","import gql from \"graphql-tag\";\r\n\r\n///here are querys (this very important for the consumation the api Graphql)\r\nexport const GET_EPISODES = gql`\r\nquery($page: Int!, $episode:String!) {\r\n  episodes(page: $page, filter:{name:$episode}) {\r\n    info {\r\n      count\r\n      next\r\n      prev\r\n      pages\r\n    }\r\n    results{\r\n      name\r\n      air_date\r\n      episode\r\n      id\r\n      characters{\r\n        name\r\n        image\r\n        id\r\n      }\r\n    }\r\n  }\r\n  }\r\n`\r\nexport const GET_PROFILE = gql`\r\n\r\n  query($id: ID!) {\r\n    character(id: $id){\r\n        name\r\n        status\r\n        species\r\n        type\r\n        image\r\n        gender\r\n        location{\r\n          dimension\r\n          name\r\n        }\r\n        origin{\r\n          name\r\n        }\r\n        episode{\r\n          name\r\n          air_date\r\n          id\r\n        }\r\n      }\r\n}\r\n`;\r\nexport const HOME_PAGE = gql`\r\n  query($page: Int!, $character: String!) {\r\n    characters(page: $page, filter: { name: $character }) {\r\n      info {\r\n        count\r\n        next\r\n        prev\r\n        pages\r\n      }\r\n      results {\r\n        name\r\n        id\r\n        image\r\n        status\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Card1 from \"./card\";\r\nimport { HOME_PAGE } from \"graphql/querys\";\r\n\r\nimport { GET_EPISODES } from \"graphql/querys\";\r\nimport { paginationButton } from \"components/helpers/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport default withRouter(function HomeIndex({ character, history, match }) {\r\n  const [page, setPage] = useState(1);\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <Query\r\n        variables={{ page, character }}\r\n        query={match.url === \"/\" ? HOME_PAGE : GET_EPISODES}\r\n      >\r\n        {({\r\n          loading,\r\n          error,\r\n          data: {\r\n            characters: {\r\n              info: { next, prev, pages, count } = {},\r\n              results\r\n            } = {}\r\n          } = {}\r\n        }) => {\r\n          if (loading) return <>loading</>;\r\n          if (error) return <>error</>;\r\n\r\n          next = next ? next : pages;\r\n          prev = prev ? prev : 1;\r\n\r\n          return (\r\n            <>\r\n              <div className=\"col-md-12 row text-center\" style={{'justify-content':'center'}}>\r\n                {results ? (\r\n                  results.map(({ name, image, status, id }) => (\r\n                    <Link style={{padding:10}} key={id} to={`/personaje/${id}`} {...id}>\r\n                      <Card1\r\n                        style={{ padding: 15 }}\r\n                        className=\"col-md-4\"\r\n                        {...{ name, image, status, id }}\r\n                      />\r\n                    </Link>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"col-md-3\">\r\n                    <h2>No results found</h2>\r\n                  </div>\r\n                )}\r\n\r\n                {count > 1 && (\r\n                  <>\r\n                    <div className=\"row  btn-toolbar  col-12 mb-5\">\r\n                      <br />\r\n                      <hr />\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success btn-sm\"\r\n                        onClick={() => setPage(prev)}\r\n                      >\r\n                        {\" \"}\r\n                        Previous\r\n                      </button>\r\n\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success btn-sm\"\r\n                        onClick={() => setPage(next)}\r\n                      >\r\n                        {\" \"}\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"row  btn-toolbar  col-md-12 mb-5\">\r\n                      <div className=\"row btn-group\">\r\n                        {paginationButton(pages, setPage, page)}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </>\r\n          );\r\n        }}\r\n      </Query>\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const paginationButton = (pageCount, setPage, currentPage) => {\r\n  const pageButtons = [];\r\n  //Utils for pagination\r\n  for (let i = 1; i <= pageCount; i++) {\r\n    pageButtons.push(\r\n      <button\r\n        className={currentPage === i ? 'btn btn-info active' : 'btn btn-info'}\r\n        key={i}\r\n        onClick={() => setPage(i)}\r\n      >\r\n        {i}\r\n      </button>\r\n    );\r\n  }\r\n  return pageButtons;\r\n};\r\n","import React from 'react'\r\nimport { Container } from '../../styles/Utils';\r\nimport HomeIndex from './components/index'\r\nexport default function Home(props, match){\r\n    return(\r\n        <div className=\"col-md-12\">\r\n            <div className=\" container\">\r\n                <HomeIndex  character={props.character} SetCharacter={props.SetCharacter} {...match}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { memo, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Modal } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n//this function open the modal and show information the a episode\r\nexport default memo(function ModalEpisodes(props) {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"btn\"\r\n        onClick={() => setVisible(!visible)}\r\n      >\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title={<>Episode: {props.name}</>}\r\n        visible={visible}\r\n        width=\"98%\"\r\n        style={{ top: 25 }}\r\n        onCancel={() => setVisible(!visible)}\r\n        onOk={() => setVisible(!visible)}\r\n      >\r\n        <h1 className=\"h2\">\r\n          <strong> Name</strong>:{props.name}\r\n        </h1>\r\n        <h1 className=\"h4\">\r\n          <strong> Air Date</strong>:{props.air_date}\r\n        </h1>\r\n        <h1 className=\"h4\">\r\n          <strong>Episode</strong>:{props.episode}\r\n        </h1>\r\n        <h1 className=\"h4\">\r\n          <div className=\" col-md-12\" style={{ background: \"#abd213\" }}>\r\n            <strong>characters in the episode :</strong>\r\n            <section className=\"col-md-12 row  text-center\" style={{'justify-content':'center'}}>\r\n              {props.characters.map((d, index) => {\r\n                return (\r\n                  <Link className=\"col-md-4\" key={index} to={`/personaje/${d.id}`} {...d.id}>\r\n                    <section className=\"col-md-12\">\r\n                      <div className=\"jumbotron center-block\">\r\n                        <img\r\n                          className=\"img-thumbnail\"\r\n                          style={{ width: 240 }}\r\n                          src={d.image}\r\n                          alt=\"alo\"\r\n                        />    <br />\r\n                        {d.name}\r\n\r\n                      </div>\r\n\r\n                    </section>\r\n                  </Link>\r\n                )\r\n              })}\r\n            </section>\r\n          </div>\r\n        </h1>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport ModalEpisodes from './modal'\r\nimport { GET_EPISODES } from \"graphql/querys\";\r\nimport { Table } from \"reactstrap\";\r\n\r\n\r\n//this function execute the query for the datas the episodes and rendering in  the table\r\nexport default function Episodes({ episode, SetEpisode }) {\r\n  const [page] = useState(1);\r\n  return (\r\n      <div className=\"col-md-12 container\">\r\n        <Query variables={{ page, episode }} query={GET_EPISODES}>\r\n          {({\r\n            loading,\r\n            error,\r\n\r\n            data: {\r\n              episodes: {\r\n                info: { next, prev, pages, count } = {},\r\n                results\r\n              } = {}\r\n            } = {}\r\n          }) => {\r\n            if (loading) return <>loading</>;\r\n            if (error) return <>error</>;\r\n\r\n            next = next ? next : pages;\r\n            prev = prev ? prev : 1;\r\n\r\n            return (\r\n              <center>\r\n                {results ? (\r\n                  <Table className=\"table-responsive{-sm|-md|-lg|-xl}\">\r\n                    <thead className=\"thead-dark\">\r\n                      <tr className=\"col-md-12 \">\r\n                        <th className=\"col-md-4\" >Name</th>\r\n                        <th className=\"col-md-4\">Air date</th>\r\n                        <th className=\"col-md-4\">Options</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {results.map(dato => {\r\n                        return (\r\n                          <tr key={dato.id}>\r\n                            <td>{dato.name}</td>\r\n                            <td>{dato.air_date}</td>\r\n                            <td>\r\n                            <ModalEpisodes {...dato}/>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                ) : (\r\n                  <div className=\"col-md-3\">\r\n                    <h2>No results found</h2>\r\n                  </div>\r\n                )}\r\n              </center>\r\n            );\r\n          }}\r\n        </Query>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { memo } from \"react\";\r\nimport {  withRouter} from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nconst Contenido = styled.div`\r\n  padding-top: 0px;\r\n`;\r\n//In this function its very very important for the functioning  the body(the Magic it's in the children)\r\nexport default memo(withRouter(function Body({ match,children}) {\r\n  return (\r\n    <>\r\n      <Contenido  style={{background:'linear-gradient(76213deg, rgb(171, 210, 19), rgb(87, 101, 116))'}}>\r\n        <center style={{background:'linear-gradient(0deg, rgb(171, 210, 19), rgb(87, 101, 116)'}}>\r\n        {/* // linear-gradient(0deg, rgb(171, 210, 19), rgb(87, 101, 116));'}}> */}\r\n      {match.url !== \"/episodes\" ? (\r\n      <strong className=\"h1\">Characters</strong>\r\n      ):\r\n      <strong className=\"h1\">Episodes</strong>\r\n      }\r\n      </center>\r\n      {children}\r\n      </Contenido>\r\n    </>\r\n  )\r\n}))","import React, { memo, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { HOME_PAGE } from \"graphql/querys\";\r\n\r\nimport { Query } from \"react-apollo\";\r\n\r\n//this function is very important for the search and this it's in the navbar(header)\r\nexport default memo(\r\n  withRouter(function HeaderPresenter({\r\n    SetCharacter,\r\n    character,\r\n    SetEpisode,\r\n    episode,\r\n    history,\r\n    match\r\n  }) {\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n      <>\r\n        <Query variables={character} query={HOME_PAGE}>\r\n          {({\r\n            loading,\r\n            data: {\r\n              characters: { info: { next, prev, pages, count } = {} } = {}\r\n            } = {}\r\n          }) => {\r\n            if (loading) return <> <nav\r\n            // style={{ background: \"#576574\" }}\r\n            // style={{background:\"#273c75\"}}\r\n            style={{background:\" rgb(87, 101, 116)\"}}\r\n            \r\n            className=\"navbar navbar-expand-md navbar-dark\"\r\n          >\r\n            <Link to=\"/\" className=\"\">\r\n              <span className=\"navbar-brand\">\r\n                <h2>Rick & Morty API</h2>\r\n              </span>\r\n            </Link>\r\n\r\n            {match.url !== \"/episodes\" ? (\r\n              <Link to=\"/episodes\" className=\"btn btn-primary\">\r\n                Episodes\r\n              </Link>\r\n            ) : (\r\n              <Link to=\"/\" className=\"btn btn-primary\">\r\n                Characters\r\n              </Link>\r\n            )}\r\n\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarTogglerDemo02\"\r\n              aria-controls=\"navbarTogglerDemo02\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div\r\n              class=\"collapse navbar-collapse\"\r\n              id=\"navbarTogglerDemo02\"\r\n            >\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search a character\"\r\n                  ref={inputRef}\r\n                />\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    match.url !== \"/episodes\"\r\n                      ? SetCharacter(inputRef.current.value)\r\n                      : SetEpisode(inputRef.current.value);\r\n                  }}\r\n                >\r\n                  Search\r\n                </button>\r\n              </ul>\r\n            </div>\r\n          </nav></>;\r\n\r\n            next = next ? next : pages;\r\n            prev = prev ? prev : 1;\r\n\r\n            return (\r\n              <>\r\n                <nav\r\n                  style={{ background: \"#576574\" }}\r\n                  className=\"navbar navbar-expand-md navbar-dark\"\r\n                >\r\n                  <Link to=\"/\" className=\"\">\r\n                    <span className=\"navbar-brand\">\r\n                      <h2>Rick & Morty API</h2>\r\n                    </span>\r\n                  </Link>\r\n\r\n                  {match.url !== \"/episodes\" ? (\r\n                    <Link to=\"/episodes\" className=\"btn btn-primary\">\r\n                      Episodes\r\n                    </Link>\r\n                  ) : (\r\n                    <Link to=\"/\" className=\"btn btn-primary\">\r\n                      Characters\r\n                    </Link>\r\n                  )}\r\n\r\n                  <button\r\n                    class=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarTogglerDemo02\"\r\n                    aria-controls=\"navbarTogglerDemo02\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                  >\r\n                    <span class=\"navbar-toggler-icon\" />\r\n                  </button>\r\n                  <div\r\n                    class=\"collapse navbar-collapse\"\r\n                    id=\"navbarTogglerDemo02\"\r\n                  >\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search a character\"\r\n                        ref={inputRef}\r\n                      />\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                          match.url !== \"/episodes\"\r\n                            ? SetCharacter(inputRef.current.value)\r\n                            : SetEpisode(inputRef.current.value);\r\n                        }}\r\n                      >\r\n                        Search\r\n                      </button>\r\n                    </ul>\r\n                  </div>\r\n                </nav>\r\n              </>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  })\r\n);\r\n","//this export call to HeaderContainer and this call HaderPresenter for the navbar\r\nimport HeaderContainer from \"./HeaderContainer\";\r\nexport default HeaderContainer;","import React, { Component } from \"react\";\r\nimport HeaderPresenter from \"./HeaderPresenter\";\r\n\r\n//This class call to Navbar passing parametres for the search\r\nclass HeaderContainer extends Component {\r\n\r\n  render() {    \r\n    return <HeaderPresenter  SetEpisode={this.props.SetEpisode} episode={this.props.episode}  character={this.props.character} SetCharacter={this.props.SetCharacter} {...this.state} color={this.props.color} />;\r\n  }\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react'\r\nimport { Redirect ,withRouter} from \"react-router-dom\";\r\n\r\nimport Navbar from 'components/Navbar'\r\nexport default withRouter(function Header({match,character,episode,SetEpisode,SetCharacter}){\r\n    return(\r\n        <>\r\n        {/* SetCharacter(inputRef.current.value) */}\r\n        {match.url === \"/\" ?   SetEpisode(\"\"): SetCharacter(\"\")}\r\n        <Navbar  character={character} episode={episode} SetEpisode={SetEpisode}  SetCharacter={SetCharacter}/>\r\n        </>\r\n    )\r\n})","import React,{memo} from 'react'\r\nimport Body from './Body';\r\nimport {withRouter} from 'react-router-dom'\r\nimport Header from './Header';\r\n\r\n///this is  important  function because give application life(the magic it's in the children)\r\n//In the function  passing parametres for Header and body\r\nexport default memo(withRouter(function Layout(props) {\r\n    return(\r\n        <>\r\n        <Header episode={props.episode} SetEpisode={props.SetEpisode}  character={props.character} SetCharacter={props.SetCharacter}/>\r\n            <Body ruta={props.match.path} >            \r\n            {props.children}\r\n            </Body>\r\n        </>\r\n    )\r\n}));","import React, { memo } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default memo(withRouter(function CardEpisodies({\r\n  name,\r\n  air_date,\r\n}) {\r\n  return (\r\n    <>\r\n      <Card hoverable className=\"col-md-3\">\r\n        <Meta title={name} description={\"published in \" + air_date} />\r\n      </Card>\r\n    </>\r\n  )\r\n}))\r\n","import React, { memo, useState } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { Redirect ,withRouter} from \"react-router-dom\";\r\nimport { Query } from \"react-apollo\";\r\nimport { GET_PROFILE } from \"graphql/querys\";\r\nimport Cardepisodes from \"./cardepisodes\";\r\n\r\n///this function make consuming the query for giving data for rendering information\r\nexport default memo(\r\n  withRouter(function Perfil({ history, match }) {\r\n    const { id } = match.params;\r\n\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    function RedirectHome() {\r\n      history.push(\"/\");\r\n    }\r\n    return (\r\n      <>\r\n        {visible ? (\r\n          <Query query={GET_PROFILE} variables={{ id }}>\r\n            {({ data, loading, error }) => {\r\n              if (loading) return <>loading</>;\r\n              if (error) return <>error</>;\r\n              return (\r\n                <>\r\n                  {data.character.name ? (\r\n                    <Modal\r\n                      title={data.character.name}\r\n                      visible={visible}\r\n                      width=\"100%\"\r\n                      style={{ top: 25 }}\r\n                      onCancel={RedirectHome}\r\n                      onOk={RedirectHome}\r\n                    >\r\n                      <div className=\"col-md-12  row \"  style={{ background: \"#abd213\",padding:32 }} >\r\n                        <div className=\"col-md-2 card\">\r\n                        <img\r\n                          className=\"img-thumbnail\"\r\n                          style={{width: 240}}\r\n                          src={data.character.image}\r\n                          alt=\"alo\"\r\n                        />                        </div>\r\n                        \r\n                        <div className=\"col-md-4 card\">\r\n                          <h1 className=\"h2\">Information:</h1>\r\n                          <h1 className=\"h4\">\r\n                            <b>name:</b> {data.character.name}\r\n                          </h1>\r\n                          <h1 className=\"h4\">\r\n                            <b>gender:</b>\r\n                            {data.character.gender}\r\n                          </h1>\r\n                          <h1 className=\"h4\">\r\n                            <b>species:</b>\r\n                            {data.character.species}\r\n                          </h1>\r\n                          <h1 className=\"h4\">\r\n                            <b>origen:</b>\r\n                            {data.character.origin.name}\r\n                          </h1>\r\n                          <h1 className=\"h4\">\r\n                            <b>status:</b>\r\n                            {data.character.status}\r\n                          </h1>\r\n                        </div>\r\n                        <section className=\"col-md-12\">\r\n                          \r\n                          <h1 className=\"h2\">Episodes where {data.character.name} participates:</h1>\r\n                          <div className=\"col-md-12 row\">                          \r\n                          {data.character.episode.map((data)=>{\r\n                            return(\r\n                              <Cardepisodes {...data}/>\r\n                            )\r\n                          })}</div>\r\n                          \r\n                        </section>\r\n                      </div>\r\n                    </Modal>\r\n                  ) : (\r\n                    <Redirect to=\"/\" />\r\n                  )}\r\n                </>\r\n              );\r\n            }}\r\n          </Query>\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )}\r\n      </>\r\n    );\r\n  })\r\n);\r\n","import React,{memo, useState} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from 'pages/home'\r\nimport Episodes from 'pages/episodes'\r\nimport Layout1 from 'layouts';\r\nimport Perfil from \"../pages/home/components/perfil\";\r\n\r\n\r\nfunction NoMatch({ location }) {\r\n    return (\r\n      <div className=\"jumbotron align-items-center\">\r\n        <h3>\r\n          Page no found <code>{location.pathname}</code>\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  \r\nexport default memo(function Routes(props) {\r\n  const [character, SetCharacter] = useState('');\r\n  const [episode, SetEpisode] = useState('');\r\n  \r\n    return (\r\n      <>\r\n      <div style={{background:'linear-gradient(76213deg, rgb(171, 210, 19), rgb(87, 101, 116))'}}>\r\n\r\n      <Router>\r\n          <Switch>\r\n          <Route path=\"/\" exact render={(props)=>(<Layout1  character={character} SetCharacter={SetCharacter}  episode={episode} SetEpisode={SetEpisode} ><Home character={character} SetCharacter={SetCharacter} {...props}/></Layout1>)} /> \r\n          <Route path=\"/episodes\" exact render={(props)=>(<Layout1 episode={episode}  character={character} SetCharacter={SetCharacter} SetEpisode={SetEpisode} ><Episodes episode={episode} SetEpisode={SetEpisode}  {...props}/></Layout1>)} /> \r\n           <Route path={`/personaje/:id`} render={props=> ( <Perfil {...props} /> )}/> \r\n          <Route component={NoMatch} />\r\n          </Switch>\r\n      </Router>\r\n      {/* {console.log(character)} */}\r\n\r\n      </div>      </>\r\n    );\r\n  })","import ApolloClient from \"apollo-boost\";\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nconst client = new ApolloClient({\r\n\turi: \"https://rickandmortyapi.com/graphql\",\r\n    cache: new InMemoryCache(),\r\n\tonError:({networkError})=>{\r\n\t\tif(networkError){\r\n\t\t\tconsole.log('Network Error',networkError);\r\n        }\r\n\t}\r\n});\r\n\r\nexport default client;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport 'zent/css/index.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport Routes from \"./routes\";\r\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\r\n\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport client from \"./Util/apolloClient\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ApolloHooksProvider client={client}>\r\n        <Routes />\r\n      </ApolloHooksProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}